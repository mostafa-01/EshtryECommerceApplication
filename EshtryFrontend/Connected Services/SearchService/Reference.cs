//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EshtryFrontend.SearchService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SearchService.ISearch")]
    public interface ISearch {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearch/DoWork", ReplyAction="http://tempuri.org/ISearch/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearch/DoWork", ReplyAction="http://tempuri.org/ISearch/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearch/Recomendations", ReplyAction="http://tempuri.org/ISearch/RecomendationsResponse")]
        string[] Recomendations(string PartOfItemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearch/Recomendations", ReplyAction="http://tempuri.org/ISearch/RecomendationsResponse")]
        System.Threading.Tasks.Task<string[]> RecomendationsAsync(string PartOfItemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearch/SearchByItemName", ReplyAction="http://tempuri.org/ISearch/SearchByItemNameResponse")]
        string[][] SearchByItemName(string ItemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearch/SearchByItemName", ReplyAction="http://tempuri.org/ISearch/SearchByItemNameResponse")]
        System.Threading.Tasks.Task<string[][]> SearchByItemNameAsync(string ItemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearch/FilterItemsInCategory", ReplyAction="http://tempuri.org/ISearch/FilterItemsInCategoryResponse")]
        string[][] FilterItemsInCategory(string[][] arr, string CategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearch/FilterItemsInCategory", ReplyAction="http://tempuri.org/ISearch/FilterItemsInCategoryResponse")]
        System.Threading.Tasks.Task<string[][]> FilterItemsInCategoryAsync(string[][] arr, string CategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearch/getCategories", ReplyAction="http://tempuri.org/ISearch/getCategoriesResponse")]
        string[] getCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearch/getCategories", ReplyAction="http://tempuri.org/ISearch/getCategoriesResponse")]
        System.Threading.Tasks.Task<string[]> getCategoriesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISearchChannel : EshtryFrontend.SearchService.ISearch, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchClient : System.ServiceModel.ClientBase<EshtryFrontend.SearchService.ISearch>, EshtryFrontend.SearchService.ISearch {
        
        public SearchClient() {
        }
        
        public SearchClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SearchClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string[] Recomendations(string PartOfItemName) {
            return base.Channel.Recomendations(PartOfItemName);
        }
        
        public System.Threading.Tasks.Task<string[]> RecomendationsAsync(string PartOfItemName) {
            return base.Channel.RecomendationsAsync(PartOfItemName);
        }
        
        public string[][] SearchByItemName(string ItemName) {
            return base.Channel.SearchByItemName(ItemName);
        }
        
        public System.Threading.Tasks.Task<string[][]> SearchByItemNameAsync(string ItemName) {
            return base.Channel.SearchByItemNameAsync(ItemName);
        }
        
        public string[][] FilterItemsInCategory(string[][] arr, string CategoryName) {
            return base.Channel.FilterItemsInCategory(arr, CategoryName);
        }
        
        public System.Threading.Tasks.Task<string[][]> FilterItemsInCategoryAsync(string[][] arr, string CategoryName) {
            return base.Channel.FilterItemsInCategoryAsync(arr, CategoryName);
        }
        
        public string[] getCategories() {
            return base.Channel.getCategories();
        }
        
        public System.Threading.Tasks.Task<string[]> getCategoriesAsync() {
            return base.Channel.getCategoriesAsync();
        }
    }
}
